// codegen:start {preset: barrel, include: ./ImmutableMap/*.ts, prefix: "@tsplus/stdlib/collections"}
export * from "@tsplus/stdlib/collections/ImmutableMap/compact"
export * from "@tsplus/stdlib/collections/ImmutableMap/copy"
export * from "@tsplus/stdlib/collections/ImmutableMap/definition"
export * from "@tsplus/stdlib/collections/ImmutableMap/empty"
export * from "@tsplus/stdlib/collections/ImmutableMap/filter"
export * from "@tsplus/stdlib/collections/ImmutableMap/filterMap"
export * from "@tsplus/stdlib/collections/ImmutableMap/filterMapWithIndex"
export * from "@tsplus/stdlib/collections/ImmutableMap/filterWithIndex"
export * from "@tsplus/stdlib/collections/ImmutableMap/from"
export * from "@tsplus/stdlib/collections/ImmutableMap/get"
export * from "@tsplus/stdlib/collections/ImmutableMap/has"
export * from "@tsplus/stdlib/collections/ImmutableMap/isEmpty"
export * from "@tsplus/stdlib/collections/ImmutableMap/make"
export * from "@tsplus/stdlib/collections/ImmutableMap/map"
export * from "@tsplus/stdlib/collections/ImmutableMap/mapWithIndex"
export * from "@tsplus/stdlib/collections/ImmutableMap/reduceWithIndex"
export * from "@tsplus/stdlib/collections/ImmutableMap/remove"
export * from "@tsplus/stdlib/collections/ImmutableMap/removeMany"
export * from "@tsplus/stdlib/collections/ImmutableMap/set"
export * from "@tsplus/stdlib/collections/ImmutableMap/size"
export * from "@tsplus/stdlib/collections/ImmutableMap/union"
export * from "@tsplus/stdlib/collections/ImmutableMap/unsafeGet"
export * from "@tsplus/stdlib/collections/ImmutableMap/update"
// codegen:end
